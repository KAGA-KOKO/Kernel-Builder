name: Kernel Builder by ismasrull

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'KernelUrl (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/Rem01Gaming/liquid_kernel_realme_even.git'
        
      KERNEL_DEFCONFIG:
        description: 'DEFCONFIG (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'even_defconfig'
        
      KERNEL_BRANCH:
        description: 'Kernel Branch'
        required: true
        default: ''
        
        
      CLANG_URL:
        description: 'Clang Url'
        required: true
        default: 'https://gitlab.com/clangsantoni/zyc_clang.git'
      CLANG_BRANCH:
        description: 'Clang Branch'
        required: false
        default: ''
      AARCH64_URL:
        description: 'Arrch64-GCC'
        required: true
        default: 'https://github.com/EternalX-project/aarch64-linux-gnu.git'
      AARCH64_BRANCH:
        description: 'AARCH64-GCC BRANCH'
        required: false
        default: ''
      ARM_LINUX_URL:
        description: 'ARM-LINUX-GNU'
        required: true
        default: 'https://github.com/EternalX-project/arm-linux-gnueabi.git'
      ARM_LINUX_BRANCH:
        description: 'ARM LINUX GNU BRANCH'
        required: false
        default: ''  
      
      

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Kernel URL: ${{ github.event.inputs.KERNEL_URL }}"
        echo "Kernel Branch: ${{ github.event.inputs.KERNEL_BRANCH }}"
        echo "Kernel Defconfig: ${{ github.event.inputsKERNEL_DEFCONFIG }}"
        echo "Clang URL: ${{ github.event.inputs.CLANG_URL }}"
        echo "Clang Branch: ${{ github.event.inputs.CLANG_BRANCH }}"
        echo "Aarch64-gnu Url: ${{ github.event.inputs.AARCH64_URL }}"
        echo "AARCH64-BRANCH: ${{ github.event.inputs.AARCH64_BRANCH }}"
        echo "Arm Linux GnubUrl: ${{ github.event.inputs.ARM_LINUX_URL }}"
        echo "Arm Linux Gny Branch: ${{ github.event.inputs.ARM_LINUX_BRANCH }}"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v3
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

      # That's it! Now use your normal steps
    - name: Prepare the environment
      run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python2 python2-dev
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar

    - name: Setup SSH Keys
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

     
              
#    - name: Install repo
#      run: |
#        mkdir ~/bin
#        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
#        chmod a+x ~/bin/repo
#        sudo ln -sf ~/bin/repo /usr/bin/repo
      
#    - name: Initialize repo
#      run: |
#        mkdir workspace
#        cd workspace
#        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
#        git config --global user.name "cumaRull"
#        git config --global user.email "rulsmods@gmail.com"
#        repo init -depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
#      id: pwd
    
#    - name: Repo Sync
#      run: |
#        repo sync -j$(nproc --all) --force-sync
#      working-directory: workspace
      
    - name: Clone kernel tree
      run: |
       git clone --depth=1 --recurse-submodules -j8 --single-branch ${{ github.event.inputs.KERNEL_URL }} ~/kernel
       cd ~/kernel
      

    - name: Clone Clang And GCC
      run: |
       cd ~/kernel
       git clone --depth=1 ${{ github.event.inputs.CLANG_URL }} clang
       git clone --depth=1 ${{ github.event.inputs.AARCH64_URL }} aarch64-gcc
       git clone --depth=1 ${{ github.event.inputs.ARM_LINUX_URL }} aarch32-gcc
      

    

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building Kernel
      run: |
       
       cd ~/kernel
       printf "\nFinal Repository kernel Should Look Like...\n" && ls -lAog ~/kernel
       export ARCH=arm64

      
       [ -d "out" ] && rm -rf out
       
       mkdir -p out

       make O=out ARCH=arm64 ${{ github.event.inputsKERNEL_DEFCONFIG }}

       PATH="${PWD}/clang/bin:${PATH}:${PWD}/aarch32-gcc/bin:${PATH}:${PWD}/aarch64-gcc/bin:${PATH}" \
       make -j$(nproc --all) O=out \
       ARCH=arm64 \
       CC="clang" \
       CLANG_TRIPLE=aarch64-linux-gnu- \
       CROSS_COMPILE="${PWD}/aarch64-gcc/bin/aarch64-linux-gnu-" \
       CROSS_COMPILE_ARM32="${PWD}/aarch32-gcc/bin/arm-linux-gnueabihf-" \
       CONFIG_NO_ERROR_ON_MISMATCH=y \
       
       
      

    
