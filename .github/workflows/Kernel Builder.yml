name: Kernel Builder by ismasrull

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'Enter your Kernel Link'
        required: true
        default: 'https://github.com/cumaRull/liquid_kernel_realme_even.git -b OSS-RUI2'
        
      KERNEL_DEFCONFIG:
        description: 'Enter the defconfig available in your kernel'
        required: true
        default: 'even_ksu_defconfig'
      CLANG_URL:
        description: 'Clang Url'
        required: true
        default: 'https://gitlab.com/GhosutoX/zyc-clang16.git'
      AARCH64_URL:
        description: 'Arrch64-GCC'
        required: true
        default: 'https://github.com/EternalX-project/aarch64-linux-gnu.git'
      ARM_LINUX_URL:
        description: 'ARM-LINUX-GNU'
        required: true
        default: 'https://github.com/EternalX-project/arm-linux-gnueabi.git'
      WITH_KERNEL_SU:
        description: 'With kernelsu?, Dont activate it if the kernel doesnt support it '
        required: true
        default: 'false'
      ZIP_NAME:
        description: 'Name for the zip file'
        required: true
        default: 'Liquid-Even' 
      ANYKERNEL_URL:
        description: 'YOUR ANYKERNEL LINK'
        required: true
        default: 'https://github.com/TheUnknownName/AnyKernel3.git -b even-liq'
      
                  
      
      

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Kernel URL: ${{ github.event.inputs.KERNEL_URL }}"
        echo "Kernel Defconfig: ${{ github.event.inputs.KERNEL_DEFCONFIG }}"
        echo "Clang URL: ${{ github.event.inputs.CLANG_URL }}"
        echo "Aarch64-gnu Url: ${{ github.event.inputs.AARCH64_URL }}"
        echo "Arm Linux GnuUrl: ${{ github.event.inputs.ARM_LINUX_URL }}"
        echo "With Kernelsu?: ${{ github.event.inputs.WITH_KERNEL_SU }}"
        echo "Zip name: ${{ github.event.inputs.ZIP_NAME }}"
        echo "Downloading AnyKernel: ${{ github.event.inputs.ANYKERNEL_URL }}"
        echo "::endgroup::"
 
    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v3
    # Cleanup The Actioecho "With Kernelsu?: ${{ github.event.inputs.WITH_KERNEL_SU }}"ns Workspace Using Custom Composite Run Actions
    
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

      # That's it! Now use your normal steps
    - name: Prepare the environment
      run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python2 python2-dev
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar
          sudo apt-get -y install gcc llvm lld python2 clang gcc-aarch64-linux-gnu git libxml2 device-tree-compiler default-jre automake lzop bison gperf build-essential zip curl zlib1g-dev libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make cpio optipng bc libstdc++6 libncurses5 wget python3 python3-pip libssl-dev rsync flex git-lfs libz3-dev libz3-4 axel tar binutils-dev ca-certificates ccache cmake file libelf-dev ninja-build python3-dev texinfo u-boot-tools xz-utils libarchive-tools software-properties-common build-essential python-is-python3 libssl-dev openssl ssh
          sudo apt-get install wget -y
    - name: Setup SSH Keys
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

    
#    - name: Install repo
#      run: |
#        mkdir ~/bin
#        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
#        chmod a+x ~/bin/repo
#        sudo ln -sf ~/bin/repo /usr/bin/repo
      
#    - name: Initialize repo
#      run: |
#        mkdir workspace
#        cd workspace
#        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
#        git config --global user.name "cumaRull"
#        git config --global user.email "rulsmods@gmail.com"
#        repo init -depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
#      id: pwd
    
#    - name: Repo Sync
#      run: |
#        repo sync -j$(nproc --all) --force-sync
#      working-directory: workspace

    - name: Clone GCC
      run: |
       mkdir -p android && cd android
       git config --global advice.detachedHead false
       git clone --depth=1 ${{ github.event.inputs.AARCH64_URL }} ./aarch64-gcc
       git clone --depth=1 ${{ github.event.inputs.ARM_LINUX_URL }} ./aarch32-gcc
       
     #  git clone --depth=1 ${{ github.event.inputs.CLANG_URL }} ./clang
       
    - name: Clone Clang
      working-directory: android/
      run: |
       mkdir -p clang && cd clang
       wget https://github.com/ZyCromerZ/Clang/releases/download/19.0.0git-20240218-release/Clang-19.0.0git-20240218.tar.gz
       tar -xvzf Clang-19.0.0git-20240218.tar.gz
       rm -f Clang-19.0.0git-20240218.tar.gz
    - name: Clone kernel tree
      working-directory: android/
      run: |
       git clone --depth=1 --recurse-submodules -j8 --single-branch ${{ github.event.inputs.KERNEL_URL }} ./kernel
       

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12


    - name: Set Properties
      run: |
        echo "BUILD_DATE=$(TZ=Asia/Jakarta date +%Y%m%d)" >> $GITHUB_ENV

    - name: Setup KernelSU
      working-directory: android/kernel
      if : ${{ github.event.inputs.WITH_KERNEL_SU == 'true' }}
      run: |
          
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
          echo -e "CONFIG_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          cat arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          


    - name: Notify in Telegram
      run: |
              
              
              
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TG_CHAT_ID }}" \
              -d text="Build Started With: <code>GithubAction</code>%0A USING DEFCONFIG:<b>${{ github.event.inputs.KERNEL_DEFCONFIG }}</b>%0AWITH BRANCH:<b>${{ github.event.inputs.KERNEL_BRANCH }}</b>%0AKernel Tree:${{ github.event.inputs.KERNEL_URL }}%0A%0AStarted On: <b>$(TZ=Asia/Jakarta date +%Y%m%d )</b>" \
              -d parse_mode=html \
              -d disable_web_page_preview=true
              
    - name: Building Kernel
      working-directory: android/kernel
      run: |
       rm -rf out
       mkdir -p out
       export ARCH=arm64
       export KBUILD_BUILD_USER=${{ github.actor }}
       export KBUILD_BUILD_HOST=GithubAction
       make O=out ARCH=arm64 ${{ github.event.inputs.KERNEL_DEFCONFIG }} LLVM=1
       make clean && make mrpropler
       PATH="${GITHUB_WORKSPACE}/android/clang/bin:${PATH}:${GITHUB_WORKSPACE}/android/aarch32-gcc/bin:${PATH}:${GITHUB_WORKSPACE}/android/aarch64-gcc/bin:${PATH}" \
       make -j$(nproc --all) O=out \
       ARCH=arm64 \
       CC="clang" \
       CLANG_TRIPLE=aarch64-linux-gnu- \
       CROSS_COMPILE="${GITHUB_WORKSPACE}/android/aarch64-gcc/bin/aarch64-linux-gnu-" \
       CROSS_COMPILE_ARM32="${GITHUB_WORKSPACE}/android/aarch32-gcc/bin/arm-linux-gnueabihf-" \
       CROSS_COMPILE_COMPAT="${GITHUB_WORKSPACE}/android/aarch32-gcc/bin/arm-linux-gnueabi-" \
       CONFIG_NO_ERROR_ON_MISMATCH=y \
       V=0 
       
    - name: Zipping Kernel
      working-directory: android/
      run: | 
            
            git clone --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} ./AnyKernel
            cd kernel/out/arch/arm64/boot && cp -r Image.gz-dtb ${GITHUB_WORKSPACE}/android/AnyKernel
            cd ${GITHUB_WORKSPACE}/android/AnyKernel
            zip -r9 ${{ github.event.inputs.ZIP_NAME }}-${{ github.event.inputs.KERNEL_DEFCONFIG }}-${{ env.BUILD_DATE }}.zip * -x .git README.md *placeholder
#            chmod a+x ${GITHUB_WORKSPACE}/scripts/upload.sh
#            bash ${GITHUB_WORKSPACE}/scripts/upload.sh
#    - name: Push To telegram
#      working-directory: android/AnyKernel
#      run: |
             
#             img=${{ github.event.inputs.KERNEL_DEFCONFIG }}-${{ env.BUILD_DATE }}.zip
#             curl -s -F document=@$img "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendDocument" \
#             -s -F chat_id="${{ secrets.TG_CHAT_ID }}" \
#             -s -F caption="<b>Finished!!</b>%0A Pushing!" \
#             -s -F parse_mode=html \
#             -s -F disable_web_page_preview=true

             
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/kernel/out/arch/arm64/boot/Image.gz-dtb
          android/kernel/out/arch/arm64/boot/Image.gz
          android/kernel/out/arch/arm64/boot/Image
          android/kernel/out/arch/arm64/boot/dtb
          android/kernel/out/arch/arm64/boot/dtbo.img
          android/AnyKernel/${{ github.event.inputs.ZIP_NAME }}-${{ github.event.inputs.KERNEL_DEFCONFIG }}-${{ env.BUILD_DATE }}.zip
        name: Kernel Build | ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
         ### Notes
          * Kernel were built/compiled using custom clang and gcc
          * Test at your own risk.
          * Use kernel flasher or any custom recoveries to flash the compressed kernel zip file.
    - name: Notify If completed
      run: | 
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TG_CHAT_ID }}" \
              -d text="<b>Hello ${{ github.actor }} Your Build Has Completed!!! And Push To Github Release</b>%0A USING DEFCONFIG:<b>${{ github.event.inputs.KERNEL_DEFCONFIG }}</b>%0AWITH BRANCH:<b>${{ github.event.inputs.KERNEL_BRANCH }}</b>%0AStarted On: <b>$(TZ=Asia/Jakarta date +%Y%m%d )</b>" \
              -d parse_mode=html \
              -d disable_web_page_preview=true
              
